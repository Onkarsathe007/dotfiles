#open i3 config
i3jump() {
  cd ~/.config/i3
  nvim config  # or use `nano` or `code` or whatever editor
}
#clear + ls
cl() {
  clear
  ls --color=auto
}
#to open an nvim 
v() {
  if [ "$#" -eq 0 ]; then
    nvim .
  else
    nvim "$@"
  fi
}
#clean up trash
cleanup() {
  echo "Cleaning up the following directories and files:"
  find . \( -name "node_modules" -o -name "venv" -o -name ".venv" \) -type d -print
  find . -name ".DS_Store" -print

  echo
  read "confirm?Are you sure you want to delete these? (y/N): "
  if [[ "$confirm" == [yY] ]]; then
    find . \( -name "node_modules" -o -name "venv" -o -name ".venv" \) -type d -prune -exec rm -rf '{}' +
    find . -name ".DS_Store" -delete
    echo "Cleanup complete."
  else
    echo "Cleanup canceled."
  fi
}
#auto commit message generate :
gencommit() {
  if ! command -v tgpt &>/dev/null; then
    echo "tgpt is not installed or not in PATH."
    return 1
  fi

  local diff
  diff=$(git diff --cached)

  if [[ -z "$diff" ]]; then
    echo "No staged changes to commit."
    return 1
  fi

  local prompt="You are a helpful commit message generator.
Create a short and clean git commit message using the Conventional Commits format (feat, fix, chore, etc).
Output using this format:
<type>(<scope>): <summary>
<newline>
- Bullet points for each change under 'Added:', 'Changed:', etc.

Avoid repetition, emojis, or verbose descriptions.
Here is the git diff:
$diff"

  local message
  message=$(echo "$prompt" | tgpt -q | sed '/Loading/d' | sed 's/^[^[:alnum:]]*//' | sed '/^$/d')

  echo -e "\nGenerated commit message:\n$message\n"

  read -r -p "Use this commit message? (y/N): " confirm
  if [[ "$confirm" =~ ^[yY]$ ]]; then
    git commit -m "$message"
  else
    echo "Commit canceled."
  fi
}

#for pdf 


pdf() {
  if [[ -f "$1" ]]; then
    zathura "$1" & disown
  else
    echo "File not found: $1"
  fi
}

#To Extract the files
extract() {
  if [ -f "$1" ]; then
    case "$1" in
      *.tar.bz2) tar xjf "$1" ;;
      *.tar.gz)  tar xzf "$1" ;;
      *.bz2)     bunzip2 "$1" ;;
      *.rar)     unrar x "$1" ;;
      *.gz)      gunzip "$1" ;;
      *.tar)     tar xf "$1" ;;
      *.tbz2)    tar xjf "$1" ;;
      *.tgz)     tar xzf "$1" ;;
      *.zip)     unzip "$1" ;;
      *.Z)       uncompress "$1" ;;
      *.7z)      7z x "$1" ;;
      *) echo "Don't know how to extract '$1'..." ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

note() {
  echo "$(date): $*" >> ~/notes.txt
  echo "Note saved!"
}

trash() {
  mkdir -p ~/.trash
  mv "$@" ~/.trash/
  echo "Moved to trash"
}

timer() {
  echo "Timer started for $1 seconds..."
  sleep "$1" && notify-send "⏰ Time's up!" || echo "⏰ Done!"
}

mysql() {
  # Start XAMPP
  sudo /opt/lampp/lampp start
  
  # Wait for a few seconds to ensure MySQL is running
  sleep 2
  #use password here if you've set that.  
  # Run MySQL shell
  sudo /opt/lampp/bin/mysql -u root
}
